// <auto-generated />
using System;
using DataBase_Exam_Zoo.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataBase_Exam_Zoo.Migrations
{
    [DbContext(typeof(ZooDbContext))]
    [Migration("20230117214339_initializer")]
    partial class initializer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataBase_Exam_Zoo.Models.Animal", b =>
                {
                    b.Property<Guid>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnimalId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("DataBase_Exam_Zoo.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("DataBase_Exam_Zoo.Models.Employee", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsibilities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("DataBase_Exam_Zoo.Models.EmployeeAndAnimal", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnimalId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EmployeeId", "AnimalId");

                    b.HasIndex("AnimalId");

                    b.ToTable("EmployeeAndAnimals");
                });

            modelBuilder.Entity("DataBase_Exam_Zoo.Models.EmployeeAndDepartment", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "DepartmentId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("EmployeeAndDepartments");
                });

            modelBuilder.Entity("DataBase_Exam_Zoo.Models.Animal", b =>
                {
                    b.HasOne("DataBase_Exam_Zoo.Models.Department", "Department")
                        .WithMany("Animals")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("DataBase_Exam_Zoo.Models.EmployeeAndAnimal", b =>
                {
                    b.HasOne("DataBase_Exam_Zoo.Models.Animal", "Animal")
                        .WithMany("EmployeeAndAnimal")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataBase_Exam_Zoo.Models.Employee", "Employee")
                        .WithMany("EmployeeAndAnimal")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DataBase_Exam_Zoo.Models.EmployeeAndDepartment", b =>
                {
                    b.HasOne("DataBase_Exam_Zoo.Models.Department", "Department")
                        .WithMany("EmployeeAndDepartments")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataBase_Exam_Zoo.Models.Employee", "Employee")
                        .WithMany("EmployeeAndDepartments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DataBase_Exam_Zoo.Models.Animal", b =>
                {
                    b.Navigation("EmployeeAndAnimal");
                });

            modelBuilder.Entity("DataBase_Exam_Zoo.Models.Department", b =>
                {
                    b.Navigation("Animals");

                    b.Navigation("EmployeeAndDepartments");
                });

            modelBuilder.Entity("DataBase_Exam_Zoo.Models.Employee", b =>
                {
                    b.Navigation("EmployeeAndAnimal");

                    b.Navigation("EmployeeAndDepartments");
                });
#pragma warning restore 612, 618
        }
    }
}
